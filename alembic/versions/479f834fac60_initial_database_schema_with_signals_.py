"""Initial database schema with signals and users tables

Revision ID: 479f834fac60
Revises: 
Create Date: 2025-06-11 14:29:21.943169

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '479f834fac60'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('signals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_id', sa.String(), nullable=False),
    sa.Column('pair', sa.String(), nullable=True),
    sa.Column('timeframe', sa.String(), nullable=True),
    sa.Column('pattern_name', sa.String(), nullable=True),
    sa.Column('pattern_type', sa.String(), nullable=True),
    sa.Column('pattern_age', sa.String(), nullable=True),
    sa.Column('entry_price', sa.Float(), nullable=True),
    sa.Column('take_profit', sa.Float(), nullable=True),
    sa.Column('stop_loss', sa.Float(), nullable=True),
    sa.Column('target_period', sa.String(), nullable=True),
    sa.Column('expiry_datetime', sa.String(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('short_description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('last_seen_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('signals', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_signals_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_signals_pair'), ['pair'], unique=False)
        batch_op.create_index(batch_op.f('ix_signals_unique_id'), ['unique_id'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('telegram_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('is_trial_used', sa.Boolean(), nullable=True),
    sa.Column('main_subscription_status', sa.String(), nullable=True),
    sa.Column('main_package_name', sa.String(), nullable=True),
    sa.Column('main_subscription_end_date', sa.DateTime(), nullable=True),
    sa.Column('ea_subscription_status', sa.String(), nullable=True),
    sa.Column('ea_subscription_end_date', sa.DateTime(), nullable=True),
    sa.Column('notifications_on', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_telegram_id'), ['telegram_id'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_telegram_id'))
        batch_op.drop_index(batch_op.f('ix_users_id'))

    op.drop_table('users')
    with op.batch_alter_table('signals', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_signals_unique_id'))
        batch_op.drop_index(batch_op.f('ix_signals_pair'))
        batch_op.drop_index(batch_op.f('ix_signals_id'))

    op.drop_table('signals')
    # ### end Alembic commands ###
